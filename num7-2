#include <iostream>
#include <string>
using namespace std;

class Matrix
{
	int a, b, c, d;
public:
	Matrix(int a = 0, int b = 0, int c = 0, int d = 0)
	{
		this->a = a;
		this->b = b;
		this->c = c;
		this->d = d;
	}
	
	friend Matrix operator >> (Matrix op1, int arr[]);
	friend Matrix &operator << (Matrix &op2, int arr[]);

	void show()
	{
		cout << "Matrix = {" << a << ' ' << b << ' ' << c << ' ' << d << "} \n";
	}
};

Matrix operator >> (Matrix op1, int arr[])
{
	int* p = arr;
	p[0] = op1.a;
	p[1] = op1.b;
	p[2] = op1.c;
	p[3] = op1.d;
	return *p;
}

Matrix& operator << (Matrix& op2, int arr[])
{
	op2.a = arr[0];
	op2.b = arr[1];
	op2.c = arr[2];
	op2.d = arr[3];
	return op2;
}

int main()
{
	Matrix a(4, 3, 2, 1), b;
	int x[4], y[4] = { 1, 2, 3, 4 };
	a >> x;
	b << y;

	for (int i = 0; i < 4; i++)
		cout << x[i] << ' ';
	cout << endl;
	b.show();
}
